const express = require('express');
const cors = require('cors');
const axios = require('axios');
const fs = require('fs');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;
const TOKEN_STORAGE = 'tokens.json';

app.use(cors());
app.use(express.json());

let customTokens = [];
if (fs.existsSync(TOKEN_STORAGE)) {
    customTokens = JSON.parse(fs.readFileSync(TOKEN_STORAGE));
}

app.get('/api/top-cryptos', async (req, res) => {
    try {
        const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {
            params: {
                vs_currency: 'usd',
                order: 'market_cap_desc',
                per_page: 5,
                page: 1,
                sparkline: false
            }
        });
        res.json(response.data);
    } catch (error) {
        res.status(500).json({ error: 'Error fetching top cryptos' });
    }
});

app.get('/api/custom-tokens', (req, res) => {
    res.json(customTokens);
});

app.post('/api/custom-tokens', async (req, res) => {
    const { name, symbol, address, logo, txHash } = req.body;
    if (!name || !symbol || !address || !logo || !txHash) {
        return res.status(400).json({ error: 'All fields are required, including transaction hash' });
    }
    const newToken = { name, symbol, address, logo };
    customTokens.push(newToken);
    fs.writeFileSync(TOKEN_STORAGE, JSON.stringify(customTokens, null, 2));
    res.status(201).json({ message: 'Token added successfully', token: newToken });
});

app.post('/api/admin-login', (req, res) => {
    const { email, password } = req.body;
    
    if (email === process.env.ADMIN_EMAIL && password === process.env.ADMIN_PASSWORD) {
        res.json({ success: true, message: 'Login successful' });
    } else {
        res.status(401).json({ success: false, message: 'Invalid credentials' });
    }
});

app.listen(PORT, () => {
    console.log(`XcryptoCap API is running on port ${PORT}`);
});
